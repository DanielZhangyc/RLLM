import Foundation

/// LLM提示词管理器
/// 集中管理所有用于LLM的提示词模板
enum LLMPrompts {
    
    // MARK: - 文章分析相关
    
    /// 生成文章概要的提示词
    static let summary = """
    你是一个专业的文章概括助手。请对以下文章进行简洁的总结，遵循以下要求：

    1. 总结要求：
       - 不要使用markdown格式，使用纯文本
       - 使用自然流畅的语言
       - 突出文章的核心内容和主要观点
       - 保持客观中立的语气
       - 使用准确但通俗易懂的表述
       - 避免过于技术性的术语
       - 总结长度控制在200字以内
    
    2. 针对不同类型的处理重点：
       - 新闻报道：关注时间、地点、人物、事件发展
       - 技术文章：关注技术原理、应用场景、优缺点
       - 观点评论：关注论点论据、观点立场、推理过程
       - 教程指南：关注步骤方法、注意事项、应用场景
    文章内容：
    {article_content}
    """
    
    /// 生成文章深度洞察的提示词
    static let insight = """
    你是一位专业的内容分析师。请严格按照以下模板格式分析文章。注意：必须完全按照示例格式输出，不得改变任何标记或格式：

    [主题标签]
    标签1,标签2,标签3
    （要求：
    1. 必须使用英文逗号分隔
    2. 提供3-5个专业且具体的标签
    3. 标签按重要性排序
    4. 标签应包含：领域分类、技术主题、应用场景等维度
    5. 避免过于宽泛的标签，如"技术"、"科技"
    6. 使用准确的专业术语
    7.标签语言跟随整体语言）

    [核心摘要]
    这里是核心摘要内容。要求：
    1. 摘要应该是一段完整的文字，不要使用要点形式
    2. 控制在100-150字之间
    3. 包含文章的核心价值和创新点
    4. 突出文章的实际应用意义
    5. 使用专业且准确的描述

    [关键观点]
    - 这里是第一个关键观点
    - 这里是第二个关键观点
    - 这里是第三个关键观点
    （要求：
    1. 每个观点控制在30字以内
    2. 按重要性排序
    3. 确保观点之间相互独立
    4. 使用清晰的因果关系或逻辑关系
    5. 突出实用性和可操作性）

    [情感倾向]
    这里是情感倾向描述
    （要求：
    1. 分析文章的立场和态度
    2. 评估内容的客观性程度
    3. 指出潜在的偏见或倾向
    4. 说明文章的目标受众
    5. 评估文章的说服力和可信度）

    [背景补充]
    这里是背景补充内容
    （要求：
    1. 提供相关领域的发展历史
    2. 说明当前行业现状
    3. 指出未来发展趋势
    4. 补充相关知识链接
    5. 建议延伸阅读方向）

    严格遵守以下规则：
    1. 必须使用以上完全相同的5个标记
    2. 每个标记必须单独占一行
    3. 内容必须紧跟在标记后面
    4. 关键观点必须使用'-'开头
    5. 主题标签必须用英文逗号分隔，不要使用中文逗号
    7. 不允许添加任何其他标记或格式
    8. 不允许使用"要点："、"结论："等其他标记
    9. 标记必须完全一致，包括中括号
    10. 除[背景补充]外，其他部分均为必需
    11. 违反任何格式要求都是不允许的

    分析以下文章：
    {article_content}
    """
    
    // MARK: - 收藏内容分析
    
    /// 生成收藏内容总结的提示词
    static let collectionSummary = """
    你是一位资深的内容策划和知识管理专家。请分析以下收藏的内容片段，并提供深度洞察：
    
    分析维度：
    1. 知识主题：
       - 识别核心主题和概念
       - 发现主题间的关联性
       - 构建知识体系框架
    
    2. 内容价值：
       - 提炼实用的见解
       - 总结可操作的方法
       - 归纳普适性原则
    
    3. 应用指导：
       - 提供实践建议
       - 指出应用场景
       - 预警潜在问题
    
    4. 延伸建议：
       - 推荐深入学习方向
       - 建议补充知识领域
       - 提供参考资源链接
    
    输出要求：
    1. 保持专业性和逻辑性
    2. 突出实用价值和可操作性
    3. 注重知识的系统性和完整性
    4. 提供清晰的行动建议
    
    收藏内容：
    {collection_content}
    """
    
    // MARK: - 阅读偏好分析
    
    /// 生成阅读偏好分析的提示词
    static let readingPreference = """
    你是一位专业的用户行为分析师和学习顾问。请分析以下阅读历史数据，并提供个性化建议：
    
    分析维度：
    1. 兴趣主题：
       - 识别高频主题和概念
       - 发现主题演变趋势
       - 评估知识覆盖广度
    
    2. 阅读模式：
       - 分析阅读时间分布
       - 识别内容难度偏好
       - 评估阅读深度
    
    3. 知识结构：
       - 识别知识体系优势
       - 发现知识盲点
       - 评估知识连贯性
    
    4. 学习建议：
       - 推荐优先学习方向
       - 建议合适的学习资源
       - 提供学习路径规划
    
    输出要求：
    1. 提供数据支持的分析结论
    2. 给出可执行的具体建议
    3. 注重建议的可行性
    4. 考虑用户当前水平和目标
    
    阅读历史：
    {reading_history}
    """
    
    /// 生成今日阅读总结的提示词
    static let dailySummary = """
    你是一位专业的阅读顾问。请根据以下今日阅读记录生成一份简洁的总结报告：

    分析要求：
    1. 内容分析：
       - 识别主要阅读主题
       - 总结核心知识点
       - 发现知识关联性
    
    2. 知识价值：
       - 提炼关键见解
       - 总结实用方法
       - 归纳普适原则
    
    3. 输出格式：
    [核心摘要]
    今日阅读内容概述（100字以内，重点关注知识收获）
    
    [关键观点]
    • 观点1（20字以内）
    • 观点2（20字以内）
    • 观点3（20字以内）
    
    [学习建议]
    针对性的改进建议（50字以内）

    注意事项：
    1. 必须严格按照以上格式输出
    2. 必须包含所有三个部分
    3. 标记必须完全一致，包括中括号
    4. 不允许添加其他标记或格式
    5. 确保内容清晰易读

    阅读记录：
    {reading_records}
    """
    
    /// 分析热门话题的提示词
    static let topicAnalysis = """
    你是一位专业的内容分析师。请分析以下阅读记录中的热门话题：

    分析要求：
    1. 话题提取：
       - 识别文章中的主要话题
       - 合并相似或相关话题
       - 确保话题的专业性和具体性
       - 使用准确专业术语
    
    2. 话题分类：
       - 按领域分类（技术、商业、科学等）
       - 识别话题间的关联性
       - 评估话题的时效性
       - 保持表述的一致性
    
    3. 输出格式：
    [热门话题]
    话题1,话题2,话题3,话题4,话题5
    （使用英文逗号分隔，按热度排序，限制5-8个话题）
    
    [话题分布]
    话题1: N篇
    话题2: N篇
    话题3: N篇
    ...
    （按文章数量降序排列）

    注意事项：
    1. 确保话题的专业性和具体性
    2. 保持话题表述的一致性和规范性
    3. 话题语言跟随系统语言

    阅读记录：
    {reading_records}
    """
    
    // MARK: - 工具方法
    
    /// 替换提示词中的占位符
    /// - Parameters:
    ///   - template: 提示词模板
    ///   - replacements: 要替换的键值对
    /// - Returns: 替换后的提示词
    static func format(_ template: String, with replacements: [String: String]) -> String {
        var result = template
        for (key, value) in replacements {
            result = result.replacingOccurrences(of: "{\(key)}", with: value)
        }
        return result
    }
} 